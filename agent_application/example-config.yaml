# Application
log_format: "json"
event_store:
  type: "postgres"
  # connection_string: "" <== Should be injected through the env variable `AGENT__EVENT_STORE__CONNECTION_STRING`
url: "https://ssi-agent.example.org"
# base_path: "unicore"
cors_enabled: false
external_server_response_timeout_ms: 500

did_methods:
  did_jwk:
    enabled: true
    # preferred: true
  did_key:
    enabled: true
  did_iota_rms:
    enabled: true
  did_web:
    enabled: true
    preferred: true

# List of Subject Syntax Types (DID Methods) supported by UniCore. The first item in the list is the default Syntax Type,
# meaning UniCore will use its identifier belonging to this type by default.
# subject_syntax_types_supported:
#   - did:jwk
#   - did:key
#   - did:iota:rms

domain_linkage_enabled: false

# List of supported signing algorithms for ID Tokens, Request Objects, and Verifiable Credentials. As of now, UniCore
# only supports EdDSA.
signing_algorithms_supported: &signing_algorithms_supported
  - EdDSA
id_token_signing_alg_values_supported: *signing_algorithms_supported
request_object_signing_alg_values_supported: *signing_algorithms_supported
vp_formats:
  jwt_vc_json:
    alg: *signing_algorithms_supported
  jwt_vp_json:
    alg: *signing_algorithms_supported

# agent_event_publisher_http
# Configure here to which events will be dispatched to a specific `target_url`. In the example below, the
# `EventPublisherHttp` will listen for the `SIOPv2AuthorizationResponseVerified` event which is part of the `connection`
# aggregate. The events will be dispatched to the `https://my-domain.example.org/event-subscriber` endpoint.
event_publisher:
  http:
    enabled: false
    target_url: &target_url "https://my-domain.example.org/event-subscriber"
    publishers:
      connection:
        {
          target_url: *target_url,
          target_events: [SIOPv2AuthorizationResponseVerified],
        }

# These display parameters are interpreted by identity wallets.
display:
  # This value will also be used in the SIOPv2/OID4VP `client_metadata`'s `client_name` property.
  - name: UniCore
    locale: en
    logo:
      # This value will also be used in the SIOPv2/OID4VP `client_metadata`'s `logo_uri` property.
      uri: https://impierce.com/images/logo-blue.png
      alt_text: UniCore Logo

# agent_issuance/issuance-config.yml
server_config:
  credential_configurations:
    - credential_configuration_id: w3c_vc_credential
      format: jwt_vc_json
      credential_definition:
        type:
          - VerifiableCredential
      display:
        - name: Verifiable Credential
          locale: en
          logo:
            url: https://impierce.com/images/logo-blue.png
            alt_text: UniCore Logo
# Key configuration (temporary)
# stronghold_path: "/tmp/local.stronghold"
# stronghold_password: "secure_password"
# issuer_key_id: "ed25519-0"
# issuer_did: "did:iota:rms:0x0000000000000000000000000000000000000000000000000000000000000000"
# issuer_fragment: "key-0"
