version: "3.1"

name: ssi-agent

services:
  cqrs-postgres-db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
    volumes:
      - "./db:/docker-entrypoint-initdb.d"
  pg-admin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5433:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - "./db/pgadmin4/servers.json:/pgadmin4/servers.json"
    depends_on:
      - cqrs-postgres-db
  ssi-agent:
    #image: ssi-agent
    build:
      context: ../..
      dockerfile: ./agent_application/docker/Dockerfile
    ports:
      - 3033:3033
    environment:
      AGENT__LOG_FORMAT: text
      AGENT__EVENT_STORE__TYPE: postgres
      AGENT__EVENT_STORE__CONNECTION_STRING: postgresql://demo_user:demo_pass@localhost:5432/demo
      AGENT__URL: http://192.168.1.234:3033

      AGENT__SECRET_MANAGER__STRONGHOLD_PATH: "/app/res/stronghold"
      AGENT__SECRET_MANAGER__STRONGHOLD_PASSWORD: "secure_password"
      AGENT__SECRET_MANAGER__ISSUER_KEY_ID: "9O66nzWqYYy1LmmiOudOlh2SMIaUWoTS"
      AGENT__SECRET_MANAGER__ISSUER_DID: "did:iota:rms:0x42ad588322e58b3c07aa39e4948d021ee17ecb5747915e9e1f35f028d7ecaf90"
      AGENT__SECRET_MANAGER__ISSUER_FRAGMENT: "bQKQRzaop7CgEvqVq8UlgLGsdF-R-hnLFkKFZqW2VN0"
    volumes:
      - ../../agent_application/example-config.yaml:/app/agent_application/example-config.yaml
      - ../../agent_secret_manager/tests/res/test.stronghold:/app/res/stronghold
      - ../../agent_verification/presentation_definitions:/app/agent_verification/presentation_definitions
      # TODO: Remove this. This is a workaround that ensures that the `agent_verification/presentation_definitions`
      # folder can be accessed by the agent from the `fn authorization_requests` endpoint.
      - ./tmp:/app/agent_api_rest
